{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stevenlockhorst/Projects/next-pokedex/pages/[name].tsx\";\nimport { useRouter } from \"next/dist/client/router\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction Detail() {\n  const router = useRouter();\n  const {\n    0: data,\n    1: setData\n  } = useState(null);\n  console.log(router.query.name);\n  useEffect(() => {\n    async () => {\n      console.log(\"fuck\");\n    }; // const res = fetchPokemonByName(router.query.name);\n\n\n    setData(res);\n  }, []);\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Detail;","map":{"version":3,"sources":["/Users/stevenlockhorst/Projects/next-pokedex/pages/[name].tsx"],"names":["useRouter","React","useEffect","useState","Detail","router","data","setData","console","log","query","name","res"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,yBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAA,OAACM,IAAD;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,KAAP,CAAaC,IAAzB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,gBAAY;AACVM,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,KAFD,CADc,CAId;;;AACAF,IAAAA,OAAO,CAACK,GAAD,CAAP;AACD,GANQ,EAMN,EANM,CAAT;AAQAV,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAuGD;;AAED,eAAeF,MAAf","sourcesContent":["import { useRouter } from \"next/dist/client/router\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction Detail() {\n  const router = useRouter();\n  const [data, setData] = useState(null);\n  console.log(router.query.name);\n\n  useEffect(() => {\n    async () => {\n      console.log(\"fuck\");\n    };\n    // const res = fetchPokemonByName(router.query.name);\n    setData(res);\n  }, []);\n\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n\n  return (\n    <div className=\"container\">\n      {/* {data && (\n        <>\n          <Head>\n            <title>{data.name}</title>\n            <link rel=\"icon\" href=\"/favicon.ico\" />\n          </Head>\n\n          <main>\n            <Container className=\"p-4\">\n              <Row>\n                <Col lg=\"5\" className=\"mb-3\">\n                  <Card className=\"p-2\">\n                    <Card.Img\n                      variant=\"top\"\n                      src={data.sprites.other.dream_world.front_default}\n                    />\n                    <Card.Body>\n                      <Card.Title>{data.name}</Card.Title>\n\n                      <Card.Text>\n                        Species: {data.species.name}\n                        <br />\n                        Base XP: {data.base_experience}\n                        <br />\n                        Height: {data.height}\n                        <br />\n                        Weight: {data.weight}\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Col>\n\n                <Col>\n                  <Table striped bordered hover size=\"sm\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Hidden</th>\n                        <th>Slot</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {data.abilities.map((item, index) => {\n                        return (\n                          <tr key={index}>\n                            <td>{item.ability.name}</td>\n                            <td>{item.is_hidden ? \"Yes\" : \"No\"}</td>\n                            <td>{item.slot}</td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n\n                  <Table striped bordered hover size=\"sm\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Base State</th>\n                        <th>Effort</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {data.stats.map((item, index) => {\n                        return (\n                          <tr key={index}>\n                            <td>{item.stat.name}</td>\n                            <td>{item.base_stat}</td>\n                            <td>{item.effort}</td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n\n                  <Table striped bordered hover size=\"sm\">\n                    <thead>\n                      <tr>\n                        <th>Slot</th>\n                        <th>Type</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {data.types.map((item, index) => {\n                        return (\n                          <tr key={index}>\n                            <td>{item.slot}</td>\n                            <td>{item.type.name}</td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                </Col>\n              </Row>\n            </Container>\n          </main>\n        </>\n      )} */}\n    </div>\n  );\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}