{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stevenlockhorst/Projects/next-pokedex/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import App from \"next/app\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n\n\nMyApp.getInitialProps = async appContext => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await MyApp.getInitialProps(appContext);\n  return _objectSpread({}, appProps);\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/stevenlockhorst/Projects/next-pokedex/pages/_app.tsx"],"names":["MyApp","Component","pageProps","getInitialProps","appContext","appProps"],"mappings":";;;;;;;;;AAAA;AACA,OAAO,sCAAP;;AAGA,SAASA,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAmD;AACjD,sBAAO,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;;;AACAF,KAAK,CAACG,eAAN,GAAwB,MAAOC,UAAP,IAAkC;AACxD;AACA,QAAMC,QAAQ,GAAG,MAAML,KAAK,CAACG,eAAN,CAAsBC,UAAtB,CAAvB;AAEA,2BAAYC,QAAZ;AACD,CALD;;AAOA,eAAeL,KAAf","sourcesContent":["// import App from \"next/app\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport type { AppContext, AppProps /*, AppContext */ } from \"next/app\";\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />;\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\nMyApp.getInitialProps = async (appContext: AppContext) => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await MyApp.getInitialProps(appContext);\n\n  return { ...appProps };\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}